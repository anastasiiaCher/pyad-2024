Index: lab0/basic_math.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from scipy.optimize import minimize_scalar, root\r\nfrom collections import Counter\r\nimport numpy as np\r\nimport math\r\n\r\n\r\ndef matrix_multiplication(matrix_a, matrix_b):\r\n    \"\"\"\r\n    Задание 1. Функция для перемножения матриц с помощью списков и циклов.\r\n    Вернуть нужно матрицу в формате списка.\r\n    \"\"\"\r\n    if len(matrix_a[0]) != len(matrix_b):\r\n        raise ValueError(\"Умножение матриц невозможно. Число столбцов первой матрицы должно быть равно числу строк второй матрицы.\")\r\n    \r\n    number_of_rows = len(matrix_a)\r\n    number_of_columns = len(matrix_b[0])\r\n\r\n    output_matrix = [[0] * number_of_columns for _ in range(number_of_rows)]\r\n    \r\n    for i in range(number_of_rows):\r\n        for j in range(number_of_columns):\r\n            for k in range(len(matrix_b)):\r\n                output_matrix[i][j] += matrix_a[i][k] * matrix_b[k][j]\r\n\r\n    return output_matrix\r\n\r\n\r\ndef functions(a_1, a_2):\r\n    \"\"\"\r\n    Задание 2. На вход поступает две строки, содержащие коэффициенты двух функций.\r\n    Необходимо найти точки экстремума функции и определить, есть ли у функций общие решения.\r\n    Вернуть нужно координаты найденных решения списком, если они есть. None, если их бесконечно много.\r\n    \"\"\"\r\n    coefs_1 = list(map(float, a_1.split()))\r\n    coefs_2 = list(map(float, a_2.split()))\r\n\r\n    def f1(x):\r\n        return coefs_1[0]*x**2 + coefs_1[1]*x + coefs_1[2]\r\n\r\n    def f2(x):\r\n        return coefs_2[0]*x**2 + coefs_2[1]*x + coefs_2[2]\r\n\r\n    def get_extr(func, coefs):\r\n        if coefs[0] > 0:\r\n            return f'Экстремум в точке: {minimize_scalar(func).x}'\r\n\r\n    def system(x):\r\n        return f1(x) - f2(x)\r\n\r\n    x = np.linspace(-4, 4, 100)\r\n    result = root(system, x)\r\n    x_roots = np.unique(result.x.round())\r\n    y_roots = f2(x_roots)\r\n    final_result = []\r\n    if result.success:\r\n        for i in range(len(x_roots)):\r\n            final_result.append((round(x_roots[i]), round(y_roots[i])))\r\n            if len(final_result) > 2:\r\n                return None\r\n    return final_result\r\n\r\n\r\ndef skew(x):\r\n    \"\"\"\r\n    Задание 3. Функция для расчета коэффициента асимметрии.\r\n    Необходимо вернуть значение коэффициента асимметрии, округленное до 2 знаков после запятой.\r\n    \"\"\"\r\n    cnt = Counter(x)\r\n    n = len(x)\r\n    mean = sum(x) / n\r\n\r\n    m2 = sum([(xi - mean) ** 2 * ni for xi, ni in cnt.items()]) / n\r\n    m3 = sum([(xi - mean) ** 3 * ni for xi, ni in cnt.items()]) / n\r\n\r\n    sigma = math.sqrt(m2)\r\n    asym = m3 / (sigma ** 3)\r\n\r\n    return round(asym, 2)\r\n\r\n\r\ndef kurtosis(x):\r\n    \"\"\"\r\n    Задание 3. Функция для расчета коэффициента эксцесса.\r\n    Необходимо вернуть значение коэффициента эксцесса, округленное до 2 знаков после запятой.\r\n    \"\"\"\r\n    count = Counter(x)\r\n    n = len(x)\r\n    mean_value = sum(x) / n\r\n\r\n    m2 = sum([(xi - mean_value) ** 2 * ni for xi, ni in count.items()]) / n\r\n    m4 = sum([(xi - mean_value) ** 4 * ni for xi, ni in count.items()]) / n\r\n\r\n    ex = m4 / (m2 ** 2) - 3\r\n    \r\n    return round(ex, 2)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lab0/basic_math.py b/lab0/basic_math.py
--- a/lab0/basic_math.py	(revision 464b40cda5c77509843fcd9b08ab755d75d4d927)
+++ b/lab0/basic_math.py	(date 1731667264734)
@@ -93,3 +93,4 @@
     ex = m4 / (m2 ** 2) - 3
     
     return round(ex, 2)
+
